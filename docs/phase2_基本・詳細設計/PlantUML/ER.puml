@startuml

' 社員テーブル（社員情報）
entity "Employee\n【社員】" as Employee {
  * id : int <<PK>>              ' 社員ID（主キー）
  --
  name : string                  ' 氏名
  email : string                 ' メールアドレス
  hire_date : date               ' 入社日
  site_id : int <<FK>>           ' 現在の配属現場ID（参照用）
}

' 現場テーブル（配属先）
entity "Site\n【現場】" as Site {
  * id : int <<PK>>              ' 現場ID（主キー）
  --
  name : string                  ' 現場名
  location : string              ' 所在地
}

' 社員現場履歴テーブル（どの現場にいついたか）
entity "EmployeeSiteHistory\n【社員現場履歴】" as EmployeeSiteHistory {
  * id : int <<PK>>              ' 履歴ID（主キー）
  --
  employee_id : int <<FK>>       ' 社員ID（FK）
  site_id : int <<FK>>           ' 現場ID（FK）
  start_date : date              ' 配属開始日
  end_date : date                ' 配属終了日（NULLなら現配属中）
}

' 研修マスタテーブル（会社が提供する研修）
entity "Training\n【研修】" as Training {
  * id : int <<PK>>              ' 研修ID（主キー）
  --
  name : string                  ' 研修名
  description : string           ' 内容説明
  start_date : date              ' 開始日
  end_date : date                ' 終了日
}

' 社員研修履歴テーブル（どの社員がどの研修を受けたか）
entity "EmployeeTraining\n【社員研修履歴】" as EmployeeTraining {
  * id : int <<PK>>              ' 受講ID（主キー）
  --
  employee_id : int <<FK>>       ' 社員ID（FK）
  training_id : int <<FK>>       ' 研修ID（FK）
  status : string                ' 状況（例：受講中・完了）
  score : int                    ' 評価・スコア
}

'===============================
' 📌 リレーション定義（相関関係）
'===============================

' 社員 ⇨ 社員現場履歴
' 社員は複数の現場履歴を持つ（1対多）
Employee ||--o{ EmployeeSiteHistory : 配属履歴を持つ

' 現場 ⇨ 社員現場履歴
' 現場にも複数の社員履歴がある（1対多）
Site ||--o{ EmployeeSiteHistory : 履歴対象現場

' 現場 ⇨ 社員（現在の配属先）
' 社員が現在所属している現場（Employee.site_id）
Site ||--o{ Employee : 現在の配属

' 社員 ⇨ 研修履歴
' 社員は複数の研修を受ける（1対多）
Employee ||--o{ EmployeeTraining : 研修受講

' 研修 ⇨ 研修履歴
' 各研修は複数の社員に受講される（1対多）
Training ||--o{ EmployeeTraining : 受講対象研修

@enduml
